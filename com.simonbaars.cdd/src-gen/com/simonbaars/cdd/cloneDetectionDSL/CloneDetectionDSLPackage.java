/**
 * generated by Xtext 2.19.0
 */
package com.simonbaars.cdd.cloneDetectionDSL;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see com.simonbaars.cdd.cloneDetectionDSL.CloneDetectionDSLFactory
 * @model kind="package"
 * @generated
 */
public interface CloneDetectionDSLPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "cloneDetectionDSL";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.simonbaars.com/cdd/CloneDetectionDSL";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "cloneDetectionDSL";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  CloneDetectionDSLPackage eINSTANCE = com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl.init();

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionImpl <em>Clone Detection</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getCloneDetection()
   * @generated
   */
  int CLONE_DETECTION = 0;

  /**
   * The feature id for the '<em><b>Project</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLONE_DETECTION__PROJECT = 0;

  /**
   * The feature id for the '<em><b>Root</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLONE_DETECTION__ROOT = 1;

  /**
   * The feature id for the '<em><b>Match</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLONE_DETECTION__MATCH = 2;

  /**
   * The feature id for the '<em><b>Exclude</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLONE_DETECTION__EXCLUDE = 3;

  /**
   * The feature id for the '<em><b>Size</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLONE_DETECTION__SIZE = 4;

  /**
   * The feature id for the '<em><b>Not Compare</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLONE_DETECTION__NOT_COMPARE = 5;

  /**
   * The feature id for the '<em><b>Compare</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLONE_DETECTION__COMPARE = 6;

  /**
   * The number of structural features of the '<em>Clone Detection</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLONE_DETECTION_FEATURE_COUNT = 7;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ProjectImpl <em>Project</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ProjectImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getProject()
   * @generated
   */
  int PROJECT = 1;

  /**
   * The feature id for the '<em><b>Path</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROJECT__PATH = 0;

  /**
   * The number of structural features of the '<em>Project</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROJECT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.SearchRootImpl <em>Search Root</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.SearchRootImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getSearchRoot()
   * @generated
   */
  int SEARCH_ROOT = 2;

  /**
   * The feature id for the '<em><b>Nodes</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEARCH_ROOT__NODES = 0;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEARCH_ROOT__CONDITION = 1;

  /**
   * The number of structural features of the '<em>Search Root</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEARCH_ROOT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.MatchImpl <em>Match</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.MatchImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getMatch()
   * @generated
   */
  int MATCH = 3;

  /**
   * The feature id for the '<em><b>Target</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MATCH__TARGET = 0;

  /**
   * The number of structural features of the '<em>Match</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MATCH_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExcludeImpl <em>Exclude</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExcludeImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExclude()
   * @generated
   */
  int EXCLUDE = 4;

  /**
   * The number of structural features of the '<em>Exclude</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXCLUDE_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.NodeImpl <em>Node</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.NodeImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getNode()
   * @generated
   */
  int NODE = 5;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE__NAME = 0;

  /**
   * The feature id for the '<em><b>Under</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE__UNDER = 1;

  /**
   * The feature id for the '<em><b>Node</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE__NODE = 2;

  /**
   * The number of structural features of the '<em>Node</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.NodesImpl <em>Nodes</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.NodesImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getNodes()
   * @generated
   */
  int NODES = 6;

  /**
   * The feature id for the '<em><b>Node</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODES__NODE = EXCLUDE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Nodes</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODES__NODES = EXCLUDE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Nodes</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODES_FEATURE_COUNT = EXCLUDE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.MinSizeImpl <em>Min Size</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.MinSizeImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getMinSize()
   * @generated
   */
  int MIN_SIZE = 7;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MIN_SIZE__EXPR = 0;

  /**
   * The feature id for the '<em><b>Brackets</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MIN_SIZE__BRACKETS = 1;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MIN_SIZE__OPERATOR = 2;

  /**
   * The feature id for the '<em><b>Size</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MIN_SIZE__SIZE = 3;

  /**
   * The number of structural features of the '<em>Min Size</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MIN_SIZE_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.MetricExprImpl <em>Metric Expr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.MetricExprImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getMetricExpr()
   * @generated
   */
  int METRIC_EXPR = 8;

  /**
   * The feature id for the '<em><b>Amount</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METRIC_EXPR__AMOUNT = 0;

  /**
   * The feature id for the '<em><b>Metric</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METRIC_EXPR__METRIC = 1;

  /**
   * The number of structural features of the '<em>Metric Expr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METRIC_EXPR_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.DoNotCompareImpl <em>Do Not Compare</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.DoNotCompareImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getDoNotCompare()
   * @generated
   */
  int DO_NOT_COMPARE = 9;

  /**
   * The number of structural features of the '<em>Do Not Compare</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DO_NOT_COMPARE_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.CompareImpl <em>Compare</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CompareImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getCompare()
   * @generated
   */
  int COMPARE = 10;

  /**
   * The feature id for the '<em><b>Nodes</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARE__NODES = 0;

  /**
   * The feature id for the '<em><b>Comparison Method</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARE__COMPARISON_METHOD = 1;

  /**
   * The feature id for the '<em><b>Deepest Node</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARE__DEEPEST_NODE = 2;

  /**
   * The feature id for the '<em><b>Perc</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARE__PERC = 3;

  /**
   * The number of structural features of the '<em>Compare</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARE_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.BooleanExpressionImpl <em>Boolean Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.BooleanExpressionImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getBooleanExpression()
   * @generated
   */
  int BOOLEAN_EXPRESSION = 11;

  /**
   * The number of structural features of the '<em>Boolean Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_EXPRESSION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.NotExpressionImpl <em>Not Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.NotExpressionImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getNotExpression()
   * @generated
   */
  int NOT_EXPRESSION = 12;

  /**
   * The feature id for the '<em><b>Sub</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_EXPRESSION__SUB = BOOLEAN_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Not Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_EXPRESSION_FEATURE_COUNT = BOOLEAN_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.BooleanExpressionBracketImpl <em>Boolean Expression Bracket</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.BooleanExpressionBracketImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getBooleanExpressionBracket()
   * @generated
   */
  int BOOLEAN_EXPRESSION_BRACKET = 13;

  /**
   * The feature id for the '<em><b>Sub</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_EXPRESSION_BRACKET__SUB = BOOLEAN_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Boolean Expression Bracket</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_EXPRESSION_BRACKET_FEATURE_COUNT = BOOLEAN_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.BooleanExpressionConstantImpl <em>Boolean Expression Constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.BooleanExpressionConstantImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getBooleanExpressionConstant()
   * @generated
   */
  int BOOLEAN_EXPRESSION_CONSTANT = 14;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_EXPRESSION_CONSTANT__VALUE = BOOLEAN_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Boolean Expression Constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_EXPRESSION_CONSTANT_FEATURE_COUNT = BOOLEAN_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.IntExpressionImpl <em>Int Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.IntExpressionImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getIntExpression()
   * @generated
   */
  int INT_EXPRESSION = 15;

  /**
   * The feature id for the '<em><b>Metric</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_EXPRESSION__METRIC = 0;

  /**
   * The number of structural features of the '<em>Int Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_EXPRESSION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionMinusImpl <em>Expression Minus</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionMinusImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExpressionMinus()
   * @generated
   */
  int EXPRESSION_MINUS = 16;

  /**
   * The feature id for the '<em><b>Metric</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MINUS__METRIC = INT_EXPRESSION__METRIC;

  /**
   * The feature id for the '<em><b>Sub</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MINUS__SUB = INT_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Expression Minus</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MINUS_FEATURE_COUNT = INT_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionPlusImpl <em>Expression Plus</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionPlusImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExpressionPlus()
   * @generated
   */
  int EXPRESSION_PLUS = 17;

  /**
   * The feature id for the '<em><b>Metric</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_PLUS__METRIC = INT_EXPRESSION__METRIC;

  /**
   * The feature id for the '<em><b>Sub</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_PLUS__SUB = INT_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Expression Plus</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_PLUS_FEATURE_COUNT = INT_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionBracketImpl <em>Expression Bracket</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionBracketImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExpressionBracket()
   * @generated
   */
  int EXPRESSION_BRACKET = 18;

  /**
   * The feature id for the '<em><b>Metric</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_BRACKET__METRIC = INT_EXPRESSION__METRIC;

  /**
   * The feature id for the '<em><b>Sub</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_BRACKET__SUB = INT_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Expression Bracket</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_BRACKET_FEATURE_COUNT = INT_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionConstantIntImpl <em>Expression Constant Int</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionConstantIntImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExpressionConstantInt()
   * @generated
   */
  int EXPRESSION_CONSTANT_INT = 19;

  /**
   * The feature id for the '<em><b>Metric</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_CONSTANT_INT__METRIC = INT_EXPRESSION__METRIC;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_CONSTANT_INT__VALUE = INT_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Expression Constant Int</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_CONSTANT_INT_FEATURE_COUNT = INT_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionBinOpImpl <em>Expression Bin Op</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionBinOpImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExpressionBinOp()
   * @generated
   */
  int EXPRESSION_BIN_OP = 20;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_BIN_OP__LEFT = BOOLEAN_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Bop</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_BIN_OP__BOP = BOOLEAN_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_BIN_OP__RIGHT = BOOLEAN_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Expression Bin Op</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_BIN_OP_FEATURE_COUNT = BOOLEAN_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionCompOpImpl <em>Expression Comp Op</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionCompOpImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExpressionCompOp()
   * @generated
   */
  int EXPRESSION_COMP_OP = 21;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_COMP_OP__LEFT = BOOLEAN_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_COMP_OP__OP = BOOLEAN_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_COMP_OP__RIGHT = BOOLEAN_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Expression Comp Op</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_COMP_OP_FEATURE_COUNT = BOOLEAN_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionAdditionImpl <em>Expression Addition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionAdditionImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExpressionAddition()
   * @generated
   */
  int EXPRESSION_ADDITION = 22;

  /**
   * The feature id for the '<em><b>Metric</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_ADDITION__METRIC = INT_EXPRESSION__METRIC;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_ADDITION__LEFT = INT_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_ADDITION__RIGHT = INT_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression Addition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_ADDITION_FEATURE_COUNT = INT_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionSubtractionImpl <em>Expression Subtraction</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionSubtractionImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExpressionSubtraction()
   * @generated
   */
  int EXPRESSION_SUBTRACTION = 23;

  /**
   * The feature id for the '<em><b>Metric</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_SUBTRACTION__METRIC = INT_EXPRESSION__METRIC;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_SUBTRACTION__LEFT = INT_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_SUBTRACTION__RIGHT = INT_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression Subtraction</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_SUBTRACTION_FEATURE_COUNT = INT_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionMultiplyImpl <em>Expression Multiply</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionMultiplyImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExpressionMultiply()
   * @generated
   */
  int EXPRESSION_MULTIPLY = 24;

  /**
   * The feature id for the '<em><b>Metric</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MULTIPLY__METRIC = INT_EXPRESSION__METRIC;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MULTIPLY__LEFT = INT_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MULTIPLY__RIGHT = INT_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression Multiply</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MULTIPLY_FEATURE_COUNT = INT_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionDivisionImpl <em>Expression Division</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionDivisionImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExpressionDivision()
   * @generated
   */
  int EXPRESSION_DIVISION = 25;

  /**
   * The feature id for the '<em><b>Metric</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_DIVISION__METRIC = INT_EXPRESSION__METRIC;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_DIVISION__LEFT = INT_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_DIVISION__RIGHT = INT_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression Division</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_DIVISION_FEATURE_COUNT = INT_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionMaximumImpl <em>Expression Maximum</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionMaximumImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExpressionMaximum()
   * @generated
   */
  int EXPRESSION_MAXIMUM = 26;

  /**
   * The feature id for the '<em><b>Metric</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MAXIMUM__METRIC = INT_EXPRESSION__METRIC;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MAXIMUM__LEFT = INT_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MAXIMUM__RIGHT = INT_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression Maximum</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MAXIMUM_FEATURE_COUNT = INT_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionMinimumImpl <em>Expression Minimum</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionMinimumImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExpressionMinimum()
   * @generated
   */
  int EXPRESSION_MINIMUM = 27;

  /**
   * The feature id for the '<em><b>Metric</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MINIMUM__METRIC = INT_EXPRESSION__METRIC;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MINIMUM__LEFT = INT_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MINIMUM__RIGHT = INT_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression Minimum</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MINIMUM_FEATURE_COUNT = INT_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionModuloImpl <em>Expression Modulo</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionModuloImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExpressionModulo()
   * @generated
   */
  int EXPRESSION_MODULO = 28;

  /**
   * The feature id for the '<em><b>Metric</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MODULO__METRIC = INT_EXPRESSION__METRIC;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MODULO__LEFT = INT_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MODULO__RIGHT = INT_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression Modulo</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MODULO_FEATURE_COUNT = INT_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionPowerImpl <em>Expression Power</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionPowerImpl
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExpressionPower()
   * @generated
   */
  int EXPRESSION_POWER = 29;

  /**
   * The feature id for the '<em><b>Metric</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_POWER__METRIC = INT_EXPRESSION__METRIC;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_POWER__LEFT = INT_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_POWER__RIGHT = INT_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression Power</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_POWER_FEATURE_COUNT = INT_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.MatchTarget <em>Match Target</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.MatchTarget
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getMatchTarget()
   * @generated
   */
  int MATCH_TARGET = 30;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.SizeMetric <em>Size Metric</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.SizeMetric
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getSizeMetric()
   * @generated
   */
  int SIZE_METRIC = 31;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.BoolOperator <em>Bool Operator</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.BoolOperator
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getBoolOperator()
   * @generated
   */
  int BOOL_OPERATOR = 32;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.Method <em>Method</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.Method
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getMethod()
   * @generated
   */
  int METHOD = 33;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.Under <em>Under</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.Under
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getUnder()
   * @generated
   */
  int UNDER = 34;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.Metric <em>Metric</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.Metric
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getMetric()
   * @generated
   */
  int METRIC = 35;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.BinaryBooleanOperator <em>Binary Boolean Operator</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.BinaryBooleanOperator
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getBinaryBooleanOperator()
   * @generated
   */
  int BINARY_BOOLEAN_OPERATOR = 36;

  /**
   * The meta object id for the '{@link com.simonbaars.cdd.cloneDetectionDSL.CompareOperator <em>Compare Operator</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.simonbaars.cdd.cloneDetectionDSL.CompareOperator
   * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getCompareOperator()
   * @generated
   */
  int COMPARE_OPERATOR = 37;


  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.CloneDetection <em>Clone Detection</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Clone Detection</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.CloneDetection
   * @generated
   */
  EClass getCloneDetection();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.CloneDetection#getProject <em>Project</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Project</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.CloneDetection#getProject()
   * @see #getCloneDetection()
   * @generated
   */
  EReference getCloneDetection_Project();

  /**
   * Returns the meta object for the attribute '{@link com.simonbaars.cdd.cloneDetectionDSL.CloneDetection#isRoot <em>Root</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Root</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.CloneDetection#isRoot()
   * @see #getCloneDetection()
   * @generated
   */
  EAttribute getCloneDetection_Root();

  /**
   * Returns the meta object for the attribute '{@link com.simonbaars.cdd.cloneDetectionDSL.CloneDetection#isMatch <em>Match</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Match</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.CloneDetection#isMatch()
   * @see #getCloneDetection()
   * @generated
   */
  EAttribute getCloneDetection_Match();

  /**
   * Returns the meta object for the attribute '{@link com.simonbaars.cdd.cloneDetectionDSL.CloneDetection#isExclude <em>Exclude</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Exclude</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.CloneDetection#isExclude()
   * @see #getCloneDetection()
   * @generated
   */
  EAttribute getCloneDetection_Exclude();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.CloneDetection#getSize <em>Size</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Size</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.CloneDetection#getSize()
   * @see #getCloneDetection()
   * @generated
   */
  EReference getCloneDetection_Size();

  /**
   * Returns the meta object for the containment reference list '{@link com.simonbaars.cdd.cloneDetectionDSL.CloneDetection#getNotCompare <em>Not Compare</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Not Compare</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.CloneDetection#getNotCompare()
   * @see #getCloneDetection()
   * @generated
   */
  EReference getCloneDetection_NotCompare();

  /**
   * Returns the meta object for the containment reference list '{@link com.simonbaars.cdd.cloneDetectionDSL.CloneDetection#getCompare <em>Compare</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Compare</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.CloneDetection#getCompare()
   * @see #getCloneDetection()
   * @generated
   */
  EReference getCloneDetection_Compare();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.Project <em>Project</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Project</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.Project
   * @generated
   */
  EClass getProject();

  /**
   * Returns the meta object for the attribute '{@link com.simonbaars.cdd.cloneDetectionDSL.Project#getPath <em>Path</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Path</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.Project#getPath()
   * @see #getProject()
   * @generated
   */
  EAttribute getProject_Path();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.SearchRoot <em>Search Root</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Search Root</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.SearchRoot
   * @generated
   */
  EClass getSearchRoot();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.SearchRoot#getNodes <em>Nodes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Nodes</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.SearchRoot#getNodes()
   * @see #getSearchRoot()
   * @generated
   */
  EReference getSearchRoot_Nodes();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.SearchRoot#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.SearchRoot#getCondition()
   * @see #getSearchRoot()
   * @generated
   */
  EReference getSearchRoot_Condition();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.Match <em>Match</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Match</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.Match
   * @generated
   */
  EClass getMatch();

  /**
   * Returns the meta object for the attribute '{@link com.simonbaars.cdd.cloneDetectionDSL.Match#getTarget <em>Target</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Target</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.Match#getTarget()
   * @see #getMatch()
   * @generated
   */
  EAttribute getMatch_Target();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.Exclude <em>Exclude</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Exclude</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.Exclude
   * @generated
   */
  EClass getExclude();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.Node <em>Node</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Node</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.Node
   * @generated
   */
  EClass getNode();

  /**
   * Returns the meta object for the attribute '{@link com.simonbaars.cdd.cloneDetectionDSL.Node#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.Node#getName()
   * @see #getNode()
   * @generated
   */
  EAttribute getNode_Name();

  /**
   * Returns the meta object for the attribute '{@link com.simonbaars.cdd.cloneDetectionDSL.Node#getUnder <em>Under</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Under</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.Node#getUnder()
   * @see #getNode()
   * @generated
   */
  EAttribute getNode_Under();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.Node#getNode <em>Node</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Node</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.Node#getNode()
   * @see #getNode()
   * @generated
   */
  EReference getNode_Node();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.Nodes <em>Nodes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Nodes</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.Nodes
   * @generated
   */
  EClass getNodes();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.Nodes#getNode <em>Node</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Node</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.Nodes#getNode()
   * @see #getNodes()
   * @generated
   */
  EReference getNodes_Node();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.Nodes#getNodes <em>Nodes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Nodes</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.Nodes#getNodes()
   * @see #getNodes()
   * @generated
   */
  EReference getNodes_Nodes();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.MinSize <em>Min Size</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Min Size</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.MinSize
   * @generated
   */
  EClass getMinSize();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.MinSize#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.MinSize#getExpr()
   * @see #getMinSize()
   * @generated
   */
  EReference getMinSize_Expr();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.MinSize#getBrackets <em>Brackets</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Brackets</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.MinSize#getBrackets()
   * @see #getMinSize()
   * @generated
   */
  EReference getMinSize_Brackets();

  /**
   * Returns the meta object for the attribute '{@link com.simonbaars.cdd.cloneDetectionDSL.MinSize#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.MinSize#getOperator()
   * @see #getMinSize()
   * @generated
   */
  EAttribute getMinSize_Operator();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.MinSize#getSize <em>Size</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Size</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.MinSize#getSize()
   * @see #getMinSize()
   * @generated
   */
  EReference getMinSize_Size();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.MetricExpr <em>Metric Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Metric Expr</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.MetricExpr
   * @generated
   */
  EClass getMetricExpr();

  /**
   * Returns the meta object for the attribute '{@link com.simonbaars.cdd.cloneDetectionDSL.MetricExpr#getAmount <em>Amount</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Amount</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.MetricExpr#getAmount()
   * @see #getMetricExpr()
   * @generated
   */
  EAttribute getMetricExpr_Amount();

  /**
   * Returns the meta object for the attribute '{@link com.simonbaars.cdd.cloneDetectionDSL.MetricExpr#getMetric <em>Metric</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Metric</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.MetricExpr#getMetric()
   * @see #getMetricExpr()
   * @generated
   */
  EAttribute getMetricExpr_Metric();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.DoNotCompare <em>Do Not Compare</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Do Not Compare</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.DoNotCompare
   * @generated
   */
  EClass getDoNotCompare();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.Compare <em>Compare</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Compare</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.Compare
   * @generated
   */
  EClass getCompare();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.Compare#getNodes <em>Nodes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Nodes</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.Compare#getNodes()
   * @see #getCompare()
   * @generated
   */
  EReference getCompare_Nodes();

  /**
   * Returns the meta object for the attribute '{@link com.simonbaars.cdd.cloneDetectionDSL.Compare#getComparisonMethod <em>Comparison Method</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Comparison Method</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.Compare#getComparisonMethod()
   * @see #getCompare()
   * @generated
   */
  EAttribute getCompare_ComparisonMethod();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.Compare#getDeepestNode <em>Deepest Node</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Deepest Node</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.Compare#getDeepestNode()
   * @see #getCompare()
   * @generated
   */
  EReference getCompare_DeepestNode();

  /**
   * Returns the meta object for the attribute '{@link com.simonbaars.cdd.cloneDetectionDSL.Compare#getPerc <em>Perc</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Perc</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.Compare#getPerc()
   * @see #getCompare()
   * @generated
   */
  EAttribute getCompare_Perc();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.BooleanExpression <em>Boolean Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Boolean Expression</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.BooleanExpression
   * @generated
   */
  EClass getBooleanExpression();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.NotExpression <em>Not Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Not Expression</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.NotExpression
   * @generated
   */
  EClass getNotExpression();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.NotExpression#getSub <em>Sub</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Sub</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.NotExpression#getSub()
   * @see #getNotExpression()
   * @generated
   */
  EReference getNotExpression_Sub();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.BooleanExpressionBracket <em>Boolean Expression Bracket</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Boolean Expression Bracket</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.BooleanExpressionBracket
   * @generated
   */
  EClass getBooleanExpressionBracket();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.BooleanExpressionBracket#getSub <em>Sub</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Sub</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.BooleanExpressionBracket#getSub()
   * @see #getBooleanExpressionBracket()
   * @generated
   */
  EReference getBooleanExpressionBracket_Sub();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.BooleanExpressionConstant <em>Boolean Expression Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Boolean Expression Constant</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.BooleanExpressionConstant
   * @generated
   */
  EClass getBooleanExpressionConstant();

  /**
   * Returns the meta object for the attribute '{@link com.simonbaars.cdd.cloneDetectionDSL.BooleanExpressionConstant#isValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.BooleanExpressionConstant#isValue()
   * @see #getBooleanExpressionConstant()
   * @generated
   */
  EAttribute getBooleanExpressionConstant_Value();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.IntExpression <em>Int Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Int Expression</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.IntExpression
   * @generated
   */
  EClass getIntExpression();

  /**
   * Returns the meta object for the attribute '{@link com.simonbaars.cdd.cloneDetectionDSL.IntExpression#getMetric <em>Metric</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Metric</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.IntExpression#getMetric()
   * @see #getIntExpression()
   * @generated
   */
  EAttribute getIntExpression_Metric();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionMinus <em>Expression Minus</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Minus</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionMinus
   * @generated
   */
  EClass getExpressionMinus();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionMinus#getSub <em>Sub</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Sub</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionMinus#getSub()
   * @see #getExpressionMinus()
   * @generated
   */
  EReference getExpressionMinus_Sub();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionPlus <em>Expression Plus</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Plus</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionPlus
   * @generated
   */
  EClass getExpressionPlus();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionPlus#getSub <em>Sub</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Sub</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionPlus#getSub()
   * @see #getExpressionPlus()
   * @generated
   */
  EReference getExpressionPlus_Sub();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionBracket <em>Expression Bracket</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Bracket</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionBracket
   * @generated
   */
  EClass getExpressionBracket();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionBracket#getSub <em>Sub</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Sub</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionBracket#getSub()
   * @see #getExpressionBracket()
   * @generated
   */
  EReference getExpressionBracket_Sub();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionConstantInt <em>Expression Constant Int</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Constant Int</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionConstantInt
   * @generated
   */
  EClass getExpressionConstantInt();

  /**
   * Returns the meta object for the attribute '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionConstantInt#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionConstantInt#getValue()
   * @see #getExpressionConstantInt()
   * @generated
   */
  EAttribute getExpressionConstantInt_Value();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionBinOp <em>Expression Bin Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Bin Op</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionBinOp
   * @generated
   */
  EClass getExpressionBinOp();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionBinOp#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionBinOp#getLeft()
   * @see #getExpressionBinOp()
   * @generated
   */
  EReference getExpressionBinOp_Left();

  /**
   * Returns the meta object for the attribute '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionBinOp#getBop <em>Bop</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Bop</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionBinOp#getBop()
   * @see #getExpressionBinOp()
   * @generated
   */
  EAttribute getExpressionBinOp_Bop();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionBinOp#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionBinOp#getRight()
   * @see #getExpressionBinOp()
   * @generated
   */
  EReference getExpressionBinOp_Right();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionCompOp <em>Expression Comp Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Comp Op</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionCompOp
   * @generated
   */
  EClass getExpressionCompOp();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionCompOp#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionCompOp#getLeft()
   * @see #getExpressionCompOp()
   * @generated
   */
  EReference getExpressionCompOp_Left();

  /**
   * Returns the meta object for the attribute '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionCompOp#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionCompOp#getOp()
   * @see #getExpressionCompOp()
   * @generated
   */
  EAttribute getExpressionCompOp_Op();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionCompOp#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionCompOp#getRight()
   * @see #getExpressionCompOp()
   * @generated
   */
  EReference getExpressionCompOp_Right();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionAddition <em>Expression Addition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Addition</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionAddition
   * @generated
   */
  EClass getExpressionAddition();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionAddition#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionAddition#getLeft()
   * @see #getExpressionAddition()
   * @generated
   */
  EReference getExpressionAddition_Left();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionAddition#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionAddition#getRight()
   * @see #getExpressionAddition()
   * @generated
   */
  EReference getExpressionAddition_Right();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionSubtraction <em>Expression Subtraction</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Subtraction</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionSubtraction
   * @generated
   */
  EClass getExpressionSubtraction();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionSubtraction#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionSubtraction#getLeft()
   * @see #getExpressionSubtraction()
   * @generated
   */
  EReference getExpressionSubtraction_Left();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionSubtraction#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionSubtraction#getRight()
   * @see #getExpressionSubtraction()
   * @generated
   */
  EReference getExpressionSubtraction_Right();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionMultiply <em>Expression Multiply</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Multiply</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionMultiply
   * @generated
   */
  EClass getExpressionMultiply();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionMultiply#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionMultiply#getLeft()
   * @see #getExpressionMultiply()
   * @generated
   */
  EReference getExpressionMultiply_Left();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionMultiply#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionMultiply#getRight()
   * @see #getExpressionMultiply()
   * @generated
   */
  EReference getExpressionMultiply_Right();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionDivision <em>Expression Division</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Division</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionDivision
   * @generated
   */
  EClass getExpressionDivision();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionDivision#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionDivision#getLeft()
   * @see #getExpressionDivision()
   * @generated
   */
  EReference getExpressionDivision_Left();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionDivision#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionDivision#getRight()
   * @see #getExpressionDivision()
   * @generated
   */
  EReference getExpressionDivision_Right();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionMaximum <em>Expression Maximum</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Maximum</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionMaximum
   * @generated
   */
  EClass getExpressionMaximum();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionMaximum#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionMaximum#getLeft()
   * @see #getExpressionMaximum()
   * @generated
   */
  EReference getExpressionMaximum_Left();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionMaximum#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionMaximum#getRight()
   * @see #getExpressionMaximum()
   * @generated
   */
  EReference getExpressionMaximum_Right();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionMinimum <em>Expression Minimum</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Minimum</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionMinimum
   * @generated
   */
  EClass getExpressionMinimum();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionMinimum#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionMinimum#getLeft()
   * @see #getExpressionMinimum()
   * @generated
   */
  EReference getExpressionMinimum_Left();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionMinimum#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionMinimum#getRight()
   * @see #getExpressionMinimum()
   * @generated
   */
  EReference getExpressionMinimum_Right();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionModulo <em>Expression Modulo</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Modulo</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionModulo
   * @generated
   */
  EClass getExpressionModulo();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionModulo#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionModulo#getLeft()
   * @see #getExpressionModulo()
   * @generated
   */
  EReference getExpressionModulo_Left();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionModulo#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionModulo#getRight()
   * @see #getExpressionModulo()
   * @generated
   */
  EReference getExpressionModulo_Right();

  /**
   * Returns the meta object for class '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionPower <em>Expression Power</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Power</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionPower
   * @generated
   */
  EClass getExpressionPower();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionPower#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionPower#getLeft()
   * @see #getExpressionPower()
   * @generated
   */
  EReference getExpressionPower_Left();

  /**
   * Returns the meta object for the containment reference '{@link com.simonbaars.cdd.cloneDetectionDSL.ExpressionPower#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.ExpressionPower#getRight()
   * @see #getExpressionPower()
   * @generated
   */
  EReference getExpressionPower_Right();

  /**
   * Returns the meta object for enum '{@link com.simonbaars.cdd.cloneDetectionDSL.MatchTarget <em>Match Target</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Match Target</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.MatchTarget
   * @generated
   */
  EEnum getMatchTarget();

  /**
   * Returns the meta object for enum '{@link com.simonbaars.cdd.cloneDetectionDSL.SizeMetric <em>Size Metric</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Size Metric</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.SizeMetric
   * @generated
   */
  EEnum getSizeMetric();

  /**
   * Returns the meta object for enum '{@link com.simonbaars.cdd.cloneDetectionDSL.BoolOperator <em>Bool Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Bool Operator</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.BoolOperator
   * @generated
   */
  EEnum getBoolOperator();

  /**
   * Returns the meta object for enum '{@link com.simonbaars.cdd.cloneDetectionDSL.Method <em>Method</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Method</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.Method
   * @generated
   */
  EEnum getMethod();

  /**
   * Returns the meta object for enum '{@link com.simonbaars.cdd.cloneDetectionDSL.Under <em>Under</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Under</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.Under
   * @generated
   */
  EEnum getUnder();

  /**
   * Returns the meta object for enum '{@link com.simonbaars.cdd.cloneDetectionDSL.Metric <em>Metric</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Metric</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.Metric
   * @generated
   */
  EEnum getMetric();

  /**
   * Returns the meta object for enum '{@link com.simonbaars.cdd.cloneDetectionDSL.BinaryBooleanOperator <em>Binary Boolean Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Binary Boolean Operator</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.BinaryBooleanOperator
   * @generated
   */
  EEnum getBinaryBooleanOperator();

  /**
   * Returns the meta object for enum '{@link com.simonbaars.cdd.cloneDetectionDSL.CompareOperator <em>Compare Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Compare Operator</em>'.
   * @see com.simonbaars.cdd.cloneDetectionDSL.CompareOperator
   * @generated
   */
  EEnum getCompareOperator();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  CloneDetectionDSLFactory getCloneDetectionDSLFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionImpl <em>Clone Detection</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getCloneDetection()
     * @generated
     */
    EClass CLONE_DETECTION = eINSTANCE.getCloneDetection();

    /**
     * The meta object literal for the '<em><b>Project</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CLONE_DETECTION__PROJECT = eINSTANCE.getCloneDetection_Project();

    /**
     * The meta object literal for the '<em><b>Root</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CLONE_DETECTION__ROOT = eINSTANCE.getCloneDetection_Root();

    /**
     * The meta object literal for the '<em><b>Match</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CLONE_DETECTION__MATCH = eINSTANCE.getCloneDetection_Match();

    /**
     * The meta object literal for the '<em><b>Exclude</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CLONE_DETECTION__EXCLUDE = eINSTANCE.getCloneDetection_Exclude();

    /**
     * The meta object literal for the '<em><b>Size</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CLONE_DETECTION__SIZE = eINSTANCE.getCloneDetection_Size();

    /**
     * The meta object literal for the '<em><b>Not Compare</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CLONE_DETECTION__NOT_COMPARE = eINSTANCE.getCloneDetection_NotCompare();

    /**
     * The meta object literal for the '<em><b>Compare</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CLONE_DETECTION__COMPARE = eINSTANCE.getCloneDetection_Compare();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ProjectImpl <em>Project</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ProjectImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getProject()
     * @generated
     */
    EClass PROJECT = eINSTANCE.getProject();

    /**
     * The meta object literal for the '<em><b>Path</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PROJECT__PATH = eINSTANCE.getProject_Path();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.SearchRootImpl <em>Search Root</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.SearchRootImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getSearchRoot()
     * @generated
     */
    EClass SEARCH_ROOT = eINSTANCE.getSearchRoot();

    /**
     * The meta object literal for the '<em><b>Nodes</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SEARCH_ROOT__NODES = eINSTANCE.getSearchRoot_Nodes();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SEARCH_ROOT__CONDITION = eINSTANCE.getSearchRoot_Condition();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.MatchImpl <em>Match</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.MatchImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getMatch()
     * @generated
     */
    EClass MATCH = eINSTANCE.getMatch();

    /**
     * The meta object literal for the '<em><b>Target</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MATCH__TARGET = eINSTANCE.getMatch_Target();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExcludeImpl <em>Exclude</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExcludeImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExclude()
     * @generated
     */
    EClass EXCLUDE = eINSTANCE.getExclude();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.NodeImpl <em>Node</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.NodeImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getNode()
     * @generated
     */
    EClass NODE = eINSTANCE.getNode();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NODE__NAME = eINSTANCE.getNode_Name();

    /**
     * The meta object literal for the '<em><b>Under</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NODE__UNDER = eINSTANCE.getNode_Under();

    /**
     * The meta object literal for the '<em><b>Node</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE__NODE = eINSTANCE.getNode_Node();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.NodesImpl <em>Nodes</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.NodesImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getNodes()
     * @generated
     */
    EClass NODES = eINSTANCE.getNodes();

    /**
     * The meta object literal for the '<em><b>Node</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODES__NODE = eINSTANCE.getNodes_Node();

    /**
     * The meta object literal for the '<em><b>Nodes</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODES__NODES = eINSTANCE.getNodes_Nodes();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.MinSizeImpl <em>Min Size</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.MinSizeImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getMinSize()
     * @generated
     */
    EClass MIN_SIZE = eINSTANCE.getMinSize();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MIN_SIZE__EXPR = eINSTANCE.getMinSize_Expr();

    /**
     * The meta object literal for the '<em><b>Brackets</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MIN_SIZE__BRACKETS = eINSTANCE.getMinSize_Brackets();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MIN_SIZE__OPERATOR = eINSTANCE.getMinSize_Operator();

    /**
     * The meta object literal for the '<em><b>Size</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MIN_SIZE__SIZE = eINSTANCE.getMinSize_Size();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.MetricExprImpl <em>Metric Expr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.MetricExprImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getMetricExpr()
     * @generated
     */
    EClass METRIC_EXPR = eINSTANCE.getMetricExpr();

    /**
     * The meta object literal for the '<em><b>Amount</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute METRIC_EXPR__AMOUNT = eINSTANCE.getMetricExpr_Amount();

    /**
     * The meta object literal for the '<em><b>Metric</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute METRIC_EXPR__METRIC = eINSTANCE.getMetricExpr_Metric();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.DoNotCompareImpl <em>Do Not Compare</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.DoNotCompareImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getDoNotCompare()
     * @generated
     */
    EClass DO_NOT_COMPARE = eINSTANCE.getDoNotCompare();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.CompareImpl <em>Compare</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CompareImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getCompare()
     * @generated
     */
    EClass COMPARE = eINSTANCE.getCompare();

    /**
     * The meta object literal for the '<em><b>Nodes</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPARE__NODES = eINSTANCE.getCompare_Nodes();

    /**
     * The meta object literal for the '<em><b>Comparison Method</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMPARE__COMPARISON_METHOD = eINSTANCE.getCompare_ComparisonMethod();

    /**
     * The meta object literal for the '<em><b>Deepest Node</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPARE__DEEPEST_NODE = eINSTANCE.getCompare_DeepestNode();

    /**
     * The meta object literal for the '<em><b>Perc</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMPARE__PERC = eINSTANCE.getCompare_Perc();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.BooleanExpressionImpl <em>Boolean Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.BooleanExpressionImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getBooleanExpression()
     * @generated
     */
    EClass BOOLEAN_EXPRESSION = eINSTANCE.getBooleanExpression();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.NotExpressionImpl <em>Not Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.NotExpressionImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getNotExpression()
     * @generated
     */
    EClass NOT_EXPRESSION = eINSTANCE.getNotExpression();

    /**
     * The meta object literal for the '<em><b>Sub</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NOT_EXPRESSION__SUB = eINSTANCE.getNotExpression_Sub();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.BooleanExpressionBracketImpl <em>Boolean Expression Bracket</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.BooleanExpressionBracketImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getBooleanExpressionBracket()
     * @generated
     */
    EClass BOOLEAN_EXPRESSION_BRACKET = eINSTANCE.getBooleanExpressionBracket();

    /**
     * The meta object literal for the '<em><b>Sub</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BOOLEAN_EXPRESSION_BRACKET__SUB = eINSTANCE.getBooleanExpressionBracket_Sub();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.BooleanExpressionConstantImpl <em>Boolean Expression Constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.BooleanExpressionConstantImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getBooleanExpressionConstant()
     * @generated
     */
    EClass BOOLEAN_EXPRESSION_CONSTANT = eINSTANCE.getBooleanExpressionConstant();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BOOLEAN_EXPRESSION_CONSTANT__VALUE = eINSTANCE.getBooleanExpressionConstant_Value();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.IntExpressionImpl <em>Int Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.IntExpressionImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getIntExpression()
     * @generated
     */
    EClass INT_EXPRESSION = eINSTANCE.getIntExpression();

    /**
     * The meta object literal for the '<em><b>Metric</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INT_EXPRESSION__METRIC = eINSTANCE.getIntExpression_Metric();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionMinusImpl <em>Expression Minus</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionMinusImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExpressionMinus()
     * @generated
     */
    EClass EXPRESSION_MINUS = eINSTANCE.getExpressionMinus();

    /**
     * The meta object literal for the '<em><b>Sub</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_MINUS__SUB = eINSTANCE.getExpressionMinus_Sub();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionPlusImpl <em>Expression Plus</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionPlusImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExpressionPlus()
     * @generated
     */
    EClass EXPRESSION_PLUS = eINSTANCE.getExpressionPlus();

    /**
     * The meta object literal for the '<em><b>Sub</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_PLUS__SUB = eINSTANCE.getExpressionPlus_Sub();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionBracketImpl <em>Expression Bracket</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionBracketImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExpressionBracket()
     * @generated
     */
    EClass EXPRESSION_BRACKET = eINSTANCE.getExpressionBracket();

    /**
     * The meta object literal for the '<em><b>Sub</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_BRACKET__SUB = eINSTANCE.getExpressionBracket_Sub();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionConstantIntImpl <em>Expression Constant Int</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionConstantIntImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExpressionConstantInt()
     * @generated
     */
    EClass EXPRESSION_CONSTANT_INT = eINSTANCE.getExpressionConstantInt();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPRESSION_CONSTANT_INT__VALUE = eINSTANCE.getExpressionConstantInt_Value();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionBinOpImpl <em>Expression Bin Op</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionBinOpImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExpressionBinOp()
     * @generated
     */
    EClass EXPRESSION_BIN_OP = eINSTANCE.getExpressionBinOp();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_BIN_OP__LEFT = eINSTANCE.getExpressionBinOp_Left();

    /**
     * The meta object literal for the '<em><b>Bop</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPRESSION_BIN_OP__BOP = eINSTANCE.getExpressionBinOp_Bop();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_BIN_OP__RIGHT = eINSTANCE.getExpressionBinOp_Right();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionCompOpImpl <em>Expression Comp Op</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionCompOpImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExpressionCompOp()
     * @generated
     */
    EClass EXPRESSION_COMP_OP = eINSTANCE.getExpressionCompOp();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_COMP_OP__LEFT = eINSTANCE.getExpressionCompOp_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPRESSION_COMP_OP__OP = eINSTANCE.getExpressionCompOp_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_COMP_OP__RIGHT = eINSTANCE.getExpressionCompOp_Right();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionAdditionImpl <em>Expression Addition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionAdditionImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExpressionAddition()
     * @generated
     */
    EClass EXPRESSION_ADDITION = eINSTANCE.getExpressionAddition();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_ADDITION__LEFT = eINSTANCE.getExpressionAddition_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_ADDITION__RIGHT = eINSTANCE.getExpressionAddition_Right();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionSubtractionImpl <em>Expression Subtraction</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionSubtractionImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExpressionSubtraction()
     * @generated
     */
    EClass EXPRESSION_SUBTRACTION = eINSTANCE.getExpressionSubtraction();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_SUBTRACTION__LEFT = eINSTANCE.getExpressionSubtraction_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_SUBTRACTION__RIGHT = eINSTANCE.getExpressionSubtraction_Right();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionMultiplyImpl <em>Expression Multiply</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionMultiplyImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExpressionMultiply()
     * @generated
     */
    EClass EXPRESSION_MULTIPLY = eINSTANCE.getExpressionMultiply();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_MULTIPLY__LEFT = eINSTANCE.getExpressionMultiply_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_MULTIPLY__RIGHT = eINSTANCE.getExpressionMultiply_Right();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionDivisionImpl <em>Expression Division</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionDivisionImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExpressionDivision()
     * @generated
     */
    EClass EXPRESSION_DIVISION = eINSTANCE.getExpressionDivision();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_DIVISION__LEFT = eINSTANCE.getExpressionDivision_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_DIVISION__RIGHT = eINSTANCE.getExpressionDivision_Right();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionMaximumImpl <em>Expression Maximum</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionMaximumImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExpressionMaximum()
     * @generated
     */
    EClass EXPRESSION_MAXIMUM = eINSTANCE.getExpressionMaximum();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_MAXIMUM__LEFT = eINSTANCE.getExpressionMaximum_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_MAXIMUM__RIGHT = eINSTANCE.getExpressionMaximum_Right();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionMinimumImpl <em>Expression Minimum</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionMinimumImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExpressionMinimum()
     * @generated
     */
    EClass EXPRESSION_MINIMUM = eINSTANCE.getExpressionMinimum();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_MINIMUM__LEFT = eINSTANCE.getExpressionMinimum_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_MINIMUM__RIGHT = eINSTANCE.getExpressionMinimum_Right();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionModuloImpl <em>Expression Modulo</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionModuloImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExpressionModulo()
     * @generated
     */
    EClass EXPRESSION_MODULO = eINSTANCE.getExpressionModulo();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_MODULO__LEFT = eINSTANCE.getExpressionModulo_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_MODULO__RIGHT = eINSTANCE.getExpressionModulo_Right();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionPowerImpl <em>Expression Power</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.ExpressionPowerImpl
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getExpressionPower()
     * @generated
     */
    EClass EXPRESSION_POWER = eINSTANCE.getExpressionPower();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_POWER__LEFT = eINSTANCE.getExpressionPower_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_POWER__RIGHT = eINSTANCE.getExpressionPower_Right();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.MatchTarget <em>Match Target</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.MatchTarget
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getMatchTarget()
     * @generated
     */
    EEnum MATCH_TARGET = eINSTANCE.getMatchTarget();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.SizeMetric <em>Size Metric</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.SizeMetric
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getSizeMetric()
     * @generated
     */
    EEnum SIZE_METRIC = eINSTANCE.getSizeMetric();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.BoolOperator <em>Bool Operator</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.BoolOperator
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getBoolOperator()
     * @generated
     */
    EEnum BOOL_OPERATOR = eINSTANCE.getBoolOperator();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.Method <em>Method</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.Method
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getMethod()
     * @generated
     */
    EEnum METHOD = eINSTANCE.getMethod();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.Under <em>Under</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.Under
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getUnder()
     * @generated
     */
    EEnum UNDER = eINSTANCE.getUnder();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.Metric <em>Metric</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.Metric
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getMetric()
     * @generated
     */
    EEnum METRIC = eINSTANCE.getMetric();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.BinaryBooleanOperator <em>Binary Boolean Operator</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.BinaryBooleanOperator
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getBinaryBooleanOperator()
     * @generated
     */
    EEnum BINARY_BOOLEAN_OPERATOR = eINSTANCE.getBinaryBooleanOperator();

    /**
     * The meta object literal for the '{@link com.simonbaars.cdd.cloneDetectionDSL.CompareOperator <em>Compare Operator</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.simonbaars.cdd.cloneDetectionDSL.CompareOperator
     * @see com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLPackageImpl#getCompareOperator()
     * @generated
     */
    EEnum COMPARE_OPERATOR = eINSTANCE.getCompareOperator();

  }

} //CloneDetectionDSLPackage
