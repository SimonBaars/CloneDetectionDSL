/**
 * generated by Xtext 2.19.0
 */
package com.simonbaars.cdd.cloneDetectionDSL;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see com.simonbaars.cdd.cloneDetectionDSL.CloneDetectionDSLPackage
 * @generated
 */
public interface CloneDetectionDSLFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  CloneDetectionDSLFactory eINSTANCE = com.simonbaars.cdd.cloneDetectionDSL.impl.CloneDetectionDSLFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Clone Detection</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Clone Detection</em>'.
   * @generated
   */
  CloneDetection createCloneDetection();

  /**
   * Returns a new object of class '<em>Project</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Project</em>'.
   * @generated
   */
  Project createProject();

  /**
   * Returns a new object of class '<em>Search Root</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Search Root</em>'.
   * @generated
   */
  SearchRoot createSearchRoot();

  /**
   * Returns a new object of class '<em>Match</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Match</em>'.
   * @generated
   */
  Match createMatch();

  /**
   * Returns a new object of class '<em>Exclude</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Exclude</em>'.
   * @generated
   */
  Exclude createExclude();

  /**
   * Returns a new object of class '<em>Node</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Node</em>'.
   * @generated
   */
  Node createNode();

  /**
   * Returns a new object of class '<em>Nodes</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Nodes</em>'.
   * @generated
   */
  Nodes createNodes();

  /**
   * Returns a new object of class '<em>Min Size</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Min Size</em>'.
   * @generated
   */
  MinSize createMinSize();

  /**
   * Returns a new object of class '<em>Metric Expr</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Metric Expr</em>'.
   * @generated
   */
  MetricExpr createMetricExpr();

  /**
   * Returns a new object of class '<em>Do Not Compare</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Do Not Compare</em>'.
   * @generated
   */
  DoNotCompare createDoNotCompare();

  /**
   * Returns a new object of class '<em>Compare</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Compare</em>'.
   * @generated
   */
  Compare createCompare();

  /**
   * Returns a new object of class '<em>Boolean Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Boolean Expression</em>'.
   * @generated
   */
  BooleanExpression createBooleanExpression();

  /**
   * Returns a new object of class '<em>Not Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Not Expression</em>'.
   * @generated
   */
  NotExpression createNotExpression();

  /**
   * Returns a new object of class '<em>Boolean Expression Bracket</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Boolean Expression Bracket</em>'.
   * @generated
   */
  BooleanExpressionBracket createBooleanExpressionBracket();

  /**
   * Returns a new object of class '<em>Boolean Expression Constant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Boolean Expression Constant</em>'.
   * @generated
   */
  BooleanExpressionConstant createBooleanExpressionConstant();

  /**
   * Returns a new object of class '<em>Int Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Int Expression</em>'.
   * @generated
   */
  IntExpression createIntExpression();

  /**
   * Returns a new object of class '<em>Expression Minus</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Minus</em>'.
   * @generated
   */
  ExpressionMinus createExpressionMinus();

  /**
   * Returns a new object of class '<em>Expression Plus</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Plus</em>'.
   * @generated
   */
  ExpressionPlus createExpressionPlus();

  /**
   * Returns a new object of class '<em>Expression Bracket</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Bracket</em>'.
   * @generated
   */
  ExpressionBracket createExpressionBracket();

  /**
   * Returns a new object of class '<em>Expression Constant Int</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Constant Int</em>'.
   * @generated
   */
  ExpressionConstantInt createExpressionConstantInt();

  /**
   * Returns a new object of class '<em>Expression Bin Op</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Bin Op</em>'.
   * @generated
   */
  ExpressionBinOp createExpressionBinOp();

  /**
   * Returns a new object of class '<em>Expression Comp Op</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Comp Op</em>'.
   * @generated
   */
  ExpressionCompOp createExpressionCompOp();

  /**
   * Returns a new object of class '<em>Expression Addition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Addition</em>'.
   * @generated
   */
  ExpressionAddition createExpressionAddition();

  /**
   * Returns a new object of class '<em>Expression Subtraction</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Subtraction</em>'.
   * @generated
   */
  ExpressionSubtraction createExpressionSubtraction();

  /**
   * Returns a new object of class '<em>Expression Multiply</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Multiply</em>'.
   * @generated
   */
  ExpressionMultiply createExpressionMultiply();

  /**
   * Returns a new object of class '<em>Expression Division</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Division</em>'.
   * @generated
   */
  ExpressionDivision createExpressionDivision();

  /**
   * Returns a new object of class '<em>Expression Maximum</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Maximum</em>'.
   * @generated
   */
  ExpressionMaximum createExpressionMaximum();

  /**
   * Returns a new object of class '<em>Expression Minimum</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Minimum</em>'.
   * @generated
   */
  ExpressionMinimum createExpressionMinimum();

  /**
   * Returns a new object of class '<em>Expression Modulo</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Modulo</em>'.
   * @generated
   */
  ExpressionModulo createExpressionModulo();

  /**
   * Returns a new object of class '<em>Expression Power</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Power</em>'.
   * @generated
   */
  ExpressionPower createExpressionPower();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  CloneDetectionDSLPackage getCloneDetectionDSLPackage();

} //CloneDetectionDSLFactory
