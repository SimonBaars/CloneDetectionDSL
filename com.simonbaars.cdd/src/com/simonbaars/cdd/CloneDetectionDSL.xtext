grammar com.simonbaars.cdd.CloneDetectionDSL with org.eclipse.xtext.common.Terminals

generate cloneDetectionDSL "http://www.simonbaars.com/cdd/CloneDetectionDSL"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore 

CloneDetection: project=Project & root?=SearchRoot? & match?=Match & exclude?=Exclude? & size=Size & (paths+=LibraryPath)* & (notCompare += DoNotCompare)* & (compare += Compare)*;
Project: 'Project' path = STRING 'FindInterProjectDuplicates'?;
LibraryPath: 'LibraryPath' path = STRING;
SearchRoot: 'SearchRoot' nodes=Nodes;
Match: 'Match' target=MatchTarget;
enum MatchTarget: Subtree | LLOC | SLOC;
Exclude: 'Exclude' Nodes;
Node: (name=ID | '*') (under=Under node=Node)?;
Nodes: node=Node (',' nodes=Nodes)?;
Size: 'Size' MinSize;
MinSize: (expr=MetricExpr | '(' brackets=MinSize ')') (operator=BoolOperator size=MinSize)?;
MetricExpr: amount=INT metric=SizeMetric;
enum SizeMetric: tokens | declarations | statements | nodes | lines | cyclomatic_complexity;
enum BoolOperator: AND = '&' | OR = '|';
DoNotCompare: 'DoNotCompare' Nodes;
Compare: 'Compare' nodes=Nodes comparisonMethod=Method deepestNode=Node? perc=Percentage?;
enum Method: Subnodes | StringMatch | CompleteMatch | FQI;
Percentage: INT '%';
enum Under: OneLevel = '->' | AnyLevel = '=>';